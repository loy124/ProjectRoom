<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- DAO 적용 경로 설정 -->


 
<mapper namespace="bit.com.a.qna.QnADao">

<!-- 게시판 메인 리스트 getBbsPageList -->
    <select id="getQnAList" parameterType="bit.com.a.qna.Param" resultType="bit.com.a.qna.QnADto">
        SELECT id, user_id, broker_id, ref, step, depth, title, content, wdate, del, auth, type, updateDate, admin_id
        FROM QNA
        WHERE 1=1
        <if test="s_category != null and s_category != '' and s_keyword != null and s_keyword != ''">
            AND del=0
            <if test="s_category == 'title'">
                AND title LIKE CONCAT("%", #{s_keyword}, "%") <!-- 오라클 || == 자바 + == mysql concat 와 같은것 -->
            </if>
            <if test="s_category == 'content'"> <!--  content가 아닌 contents니까 주의 검색시 -->
                AND content LIKE CONCAT("%", #{s_keyword}, "%")
            </if>
            <if test="s_category == 'writer'">
					AND (user_id=#{s_keyword} OR broker_id=#{s_keyword})
			</if>	
        </if>
        ORDER BY ref DESC, step ASC
        LIMIT #{start}, 10; 

    </select>
    

<!-- 페이징 / 전체 글 갯수 페이지당 보여주는 함수를 위함 getBbsCount-->
    <select id="getQnACount" parameterType="bit.com.a.qna.Param" resultType="java.lang.Integer">
        SELECT IFNULL(COUNT(*), 0) AS CNT <!-- 오라클nvl과 다름 -->
        FROM QNA
        WHERE 1=1
        <if test="s_category != null and s_category != '' and s_keyword != null and s_keyword != ''">
            AND del=0
            <if test="s_category == 'title'">
                AND title LIKE CONCAT("%", #{s_keyword}, "%") 
            </if>
            <if test="s_category == 'content'"> <!--  content가 아닌 contents니까 주의 검색시 -->
                AND content LIKE CONCAT("%", #{s_keyword}, "%")
            </if>
            <if test="s_category == 'writer'">
					AND (user_id=#{s_keyword} OR broker_id=#{s_keyword})
			</if>	
        </if>
    </select>
    
    <!--  디테일 / 게시글 제목을 누를시 게시글 시퀀스를 받아 디테일을 보여준다.  getBbs-->
    <select id="getQnA" parameterType="java.lang.Integer" resultType="bit.com.a.qna.QnADto">
        SELECT id, user_id, broker_id, ref, step, depth, title, content, wdate, del, auth, type, updateDate, admin_id
        FROM QNA
        WHERE id=#{id}
    </select> 
  
<!-- 글쓰기 -->     
    <!-- 글쓰기 ref값가져오기  -->
  	 <select id="getRef" parameterType="bit.com.a.qna.QnADto" resultType="java.lang.Integer">
	    SELECT IFNULL(MAX(ref),0)+1 
	    FROM QNA
    </select> 
    
    <!-- 글쓰기 writeBbs-->
     <insert id="writeQnA" parameterType="bit.com.a.qna.QnADto" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO QNA(user_id, broker_id, ref, step, depth, title, content, wdate, del, auth, type, admin_id) 
		VALUES(	#{userId}, #{brokerId}, #{ref}, 0, 0, #{title},#{content}, NOW(), 0, #{auth}, #{type}, #{adminId})
	</insert>
	
	

<!-- 수정   -->
	<update id="updateQnA" parameterType="bit.com.a.qna.QnADto">
		UPDATE QNA
		SET title=#{title}, content=#{content}, type=#{type}, updateDate=NOW()
		WHERE id=#{id}
	</update>
	
<!-- 삭제   -->
	<update id="deleteQnA" parameterType="java.lang.Integer">
		UPDATE QNA
		SET del=1
		WHERE id=#{id}
	</update>
	
	
<!-- 답글 타입도 넣어줄 것-->	
	 <!-- 답글을 위한 사전 값가져오기  -->
  	 <select id="getReply" parameterType="java.lang.Integer" resultType="bit.com.a.qna.QnADto">
	    SELECT IFNULL(MAX(ref),0) as ref, IFNULL(MAX(step),0)+1 as step, IFNULL(MAX(depth),0)+1 as depth, type
	    FROM QNA
	    WHERE id=#{id}
    </select> 

	
	<!-- 답글 insert -->
	<insert id="replyQnAInsert" parameterType="bit.com.a.qna.QnADto" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO QNA( user_id, broker_id, ref, step, depth, title, content, wdate, del, auth, type, admin_id) 
		VALUES(	#{userId}, #{brokerId}, #{ref}, #{step}, #{depth}, #{title},#{content}, NOW(), 0, #{auth}, #{type}, #{adminId})
	</insert>


<!-- 
<update id="replyBbsUpdate"
	parameterType="bit.com.a.model.BbsDto">
	UPDATE BBS 
	SET STEP=STEP+1
	WHERE REF=(SELECT REF FROM BBS WHERE SEQ=#{seq})
		AND STEP>(SELECT STEP FROM BBS WHERE SEQ=#{seq})		
</update>

<insert id="replyBbsInsert"
	parameterType="bit.com.a.model.BbsDto">
	INSERT INTO BBS
		(SEQ, ID, REF, STEP, DEPTH, 
		TITLE, CONTENT, WDATE, DEL, READCOUNT)
	VALUES(SEQ_BBS.NEXTVAL, #{id},
		(SELECT REF FROM BBS WHERE SEQ=#{seq}),
		(SELECT STEP FROM BBS WHERE SEQ=#{seq})+1,
		(SELECT DEPTH FROM BBS WHERE SEQ=#{seq})+1,
		#{title}, #{content}, SYSDATE,
		0, 0)	
</insert>

 -->
</mapper>



















