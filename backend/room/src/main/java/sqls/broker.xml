<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- bit.com.a.dao.BbsDao -->
<mapper namespace="bit.com.a.broker.BrokerDao">


  <!-- now() = SYSOUT -->
  <insert id="register" parameterType="bit.com.a.broker.BrokerDto" useGeneratedKeys="true" keyProperty="id">
INSERT INTO BROKER(broker_id, broker_password, name, email, age, phone_number, address,
 auth, registered_at, registered_by)
 VALUES(#{brokerId},#{brokerPassword}, #{name}, #{email}, #{age}, #{phoneNumber}, #{address}, 4, NOW(), 'ADMIN') 
</insert>

  <!-- 파일업로드를 추가한 회원가입을 구현해야 한다. -->
  <select id="getMemberList" resultType="bit.com.a.broker.BrokerDto">
	select * from BROKER
  </select>

  <!-- 세션에 담기 위한 용도 -->
  <select id="login" parameterType="bit.com.a.broker.BrokerDto" resultType="bit.com.a.broker.BrokerDto">
    SELECT *
    FROM BROKER
    WHERE broker_id = #{brokerId} AND broker_password = #{brokerPassword}
</select>


  <select id="idCheck" parameterType="bit.com.a.broker.BrokerDto" resultType="java.lang.Integer">
      select COUNT(*) 
      from BROKER
      where broker_id = #{brokerId}
  </select>


  <!-- 추후 비밀번호검색 -->
  <!-- <select id="getInformation" parameterType="bit.com.a.broker.BrokerDto" resultType="bit.com.a.broker.BrokerDto">
  SELECT * 
  FROM BROKER 
  WHERE id = #{id}

</select> -->

  <update id="updateProfile" parameterType="bit.com.a.broker.BrokerDto">
  update BROKER set profile_image = #{profileImage} where broker_id = #{brokerId}
</update>

  <update id="updateUser" parameterType="bit.com.a.broker.BrokerDto">
  update BROKER set name = #{name}, broker_id = #{brokerId}, phone_number = #{phoneNumber}
  where id = #{id}
  </update>


  <!-- 리뷰및 올린 게시글 리스트들 담아오기 -->
  <resultMap id="brokerMap" type="bit.com.a.broker.BrokerDto">
    <result column="id" property="id" />
    <result column="broker_id" property="brokerId" />
    <result column="broker_password" property="brokerPassword" />
    <result column="name" property="name" />
    <result column="email" property="email" />
    <result column="age" property="age" />
    <result column="phone_number" property="phoneNumber" />
    <result column="certification" property="certification" />
    <result column="profile_image" property="profileImage" />
    <result column="write_count" property="writeCount" />
    <result column="registered_at" property="registeredAt" />
    <result column="registered_by" property="registeredBy" />
    <!-- 프로필 정보 받아오기 -->
    <collection property="roomList" column="id" javaType="java.util.ArrayList" select="getRoomList"></collection>

    <collection property="reviewList" column="id" javaType="java.util.ArrayList" select="getReviewList"></collection>
  </resultMap>

  <!-- 브로커 정보및 방의 리스트 가져오기 -->
  <select id="getRoomList" resultType="bit.com.a.room.RoomDto">
    select * from ROOM where BROKER_id = #{id}
  </select>

  <!--  -->
  <select id="getReviewList" resultType="bit.com.a.review.ReviewDto">
    select * from REVIEW where broker_review_id = #{id}
  </select>

  <select id="getInformation" parameterType="bit.com.a.broker.BrokerDto" resultMap="brokerMap">
    select * from BROKER where id =#{id}
  </select>
</mapper>